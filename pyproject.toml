[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs",
  "hatchling",
]

[project]
name = "tap-pushbullet"
description = "Singer tap for Pushbullet, built with the Meltano SDK for Singer Taps."
readme = "README.md"
keywords = [
  "ELT",
  "Pushbullet",
  "singer.io",
]
license = "Apache-2.0"
authors = [
  { name = "Edgar Ramírez-Mondragón", email = "edgarrm358@gmail.com" },
]
requires-python = ">=3.10"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
]
dynamic = [ "version" ]
dependencies = [
  "backoff~=2.2.1",
  "requests-cache>=1.1,<2",
  "singer-sdk~=0.49.1",
]
urls.Documentation = "https://github.com/reservoir-data/tap-pushbullet#readme"
urls.Homepage = "https://github.com/reservoir-data/tap-pushbullet"
urls.Repository = "https://github.com/reservoir-data/tap-pushbullet"
scripts."tap-pushbullet" = "tap_pushbullet.tap:TapPushbullet.cli"

[dependency-groups]
dev = [
  { include-group = "testing" },
  { include-group = "typing" },
]
testing = [
  "deptry>=0.12",
  "pytest-github-actions-annotate-failures>=0.2",
  "singer-sdk[testing]",
]
typing = [
  "mypy>=1.11.2",
  "types-requests>=2.31.0.6",
]

[tool.hatch.version]
source = "vcs"

[tool.ruff]
line-length = 88
src = [
  "tap_pushbullet",
  "tests",
]
lint.select = [
  "ALL",
]
lint.ignore = [
  "COM812", # missing-trailing-comma
  "DJ",     # flake8-django
  "ISC001", # single-line-implicit-string-concatenation
  "PD",     # pandas-vet
]
lint.per-file-ignores."src/*" = [
  "PD",
]
lint.per-file-ignores."tests/*" = [
  "ANN201",
  "S101",
]
lint.flake8-annotations.allow-star-arg-any = true
lint.flake8-annotations.mypy-init-return = true
lint.flake8-annotations.suppress-dummy-args = true
lint.flake8-errmsg.max-string-length = 30
lint.flake8-quotes.docstring-quotes = "double"
lint.flake8-quotes.inline-quotes = "double"
lint.flake8-quotes.multiline-quotes = "double"
lint.isort.known-first-party = [
  "citric",
]
lint.mccabe.max-complexity = 5
lint.pydocstyle.convention = "google"

[tool.deptry.package_module_name_map]
mypy = "mypy"
types-requests = "requests"

[tool.pyproject-fmt]
max_supported_python = "3.14"

[tool.pytest.ini_options]
addopts = "-vvv"
filterwarnings = [
  "error",
  "default:'asyncio.iscoroutinefunction' is deprecated:DeprecationWarning",
  """default:Fields in transformed catalog but not in records:UserWarning""",
  # https://github.com/python-attrs/cattrs/issues/635
  # https://github.com/python/cpython/issues/105499
  "default:'_UnionGenericAlias' is deprecated and slated for removal in Python 3.17:DeprecationWarning",
]
xfail_strict = true

[tool.tox]
min_version = "4.22"
requires = [
  # renovate: datasource=pypi depName=tox
  "tox~=4.22",
  # renovate: datasource=pypi depName=tox-uv
  "tox-uv~=1.17",
]
env_list = [
  "dependencies",
  "typing",
  "3.14",
  "3.13",
  "3.12",
  "3.11",
  "3.10",
]

[tool.tox.env_run_base]
runner = "uv-venv-lock-runner"
pass_env = [ "TAP_PUSHBULLET_*" ]
dependency_groups = [ "testing" ]
commands = [ [ "pytest", { replace = "posargs", default = [ "tests" ], extend = true } ] ]

[tool.tox.env.dependencies]
dependency_groups = [ "testing" ]
commands = [ [ "deptry", "." ] ]

[tool.tox.env.typing]
dependency_groups = [ "testing", "typing" ]
commands = [ [ "mypy", "--strict", { replace = "posargs", default = [ "tap_pushbullet", "tests" ], extend = true } ] ]

[tool.mypy]
warn_unused_configs = true

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "backoff.*",
]

[tool.uv]
required-version = ">=0.5.19"
